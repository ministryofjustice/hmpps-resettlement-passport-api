{{- range $stub := .Values.deploy_stubs }}
{{- $filesGlob := printf "files/stubs/%s/__files/*" $stub }}
{{- $mappingsGlob := printf "files/stubs/%s/mappings/*" $stub }}
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ $stub }}-stub-data-files
data:
{{ ($.Files.Glob $filesGlob).AsConfig | indent 2 }}
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ $stub }}-stub-data-mappings
data:
{{ ($.Files.Glob $mappingsGlob).AsConfig | indent 2 }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ $stub }}-stub
  labels:
    app.kubernetes.io/name: {{ $stub }}-stub
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ $stub }}-stub
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ $stub }}-stub
    spec:
      securityContext:
        runAsUser: 1000
      containers:
        - name: {{ $stub }}-stub
          image: wiremock/wiremock
          command: ["/docker-entrypoint.sh", "--global-response-templating", "--verbose"]
          ports:
            - containerPort: 8080
          volumeMounts:
            - name: files-volume
              mountPath: /home/wiremock/__files
            - name: mappings-volume
              mountPath: /home/wiremock/mappings
          livenessProbe:
            httpGet:
              path: /__admin/mappings
              port: 8080
            initialDelaySeconds: 30
            periodSeconds: 30
      volumes:
        - name: files-volume
          configMap:
            name: {{ $stub }}-stub-data-files
        - name: mappings-volume
          configMap:
            name: {{ $stub }}-stub-data-mappings
---
apiVersion: v1
kind: Service
metadata:
  name: {{ $stub }}-stub
spec:
  selector:
    app.kubernetes.io/name: {{ $stub }}-stub
  ports:
    - protocol: TCP
      port: 80
      targetPort: 8080
{{- end }}