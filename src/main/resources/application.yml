info.app:
  name: Hmpps Resettlement Passport Api
  version: 1.0
azure:
  application-insights:
    web:
      enabled: false

spring:
  application:
    name: hmpps-resettlement-passport-api
  codec:
    max-in-memory-size: 10MB
  mvc:
    async:
      request-timeout: 1m
  data:
    redis:
      repositories:
        enabled: false
      ssl:
        enabled: true

  servlet:
    multipart:
      max-file-size: 10MB
      max-request-size: 10MB

  security:
    oauth2:
      resourceserver:
        jwt:
          jwk-set-uri: ${api.base.url.oauth}/.well-known/jwks.json

      client:
        registration:
          RESETTLEMENT_PASSPORT_API:
            provider: hmpps-auth
            client-id: ${RESETTLEMENT_PASSPORT_API_CLIENT_ID}
            client-secret: ${RESETTLEMENT_PASSPORT_API_CLIENT_SECRET}
            authorization-grant-type: client_credentials
        provider:
          hmpps-auth:
            token-uri: ${api.base.url.oauth}/oauth/token

  jackson:
    date-format: "yyyy-MM-dd HH:mm:ss"
    serialization:
      WRITE_DATES_AS_TIMESTAMPS: false
      WRITE_DURATIONS_AS_TIMESTAMPS: false

  devtools:
    add-properties: false
    data:
      web:
        pageable:
          max-page-size: 20000

  profiles:
    group:
      test:
        - "stdout"

  jpa:
    open-in-view: false
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
    show-sql: false
    generate-ddl: false
    hibernate:
      ddl-auto: none

  datasource:
    url: 'jdbc:postgresql://${DATABASE_ENDPOINT}/${DATABASE_NAME}?sslmode=verify-full'
    username: ${DATABASE_USERNAME}
    password: ${DATABASE_PASSWORD}
    hikari:
      pool-name: Hmpps-Resettlement-Passport
      connectionTimeout: 1000
      validationTimeout: 500

  flyway:
    initOnMigrate: true
    enabled: true
    url: ${spring.datasource.url}
    user: ${DATABASE_USERNAME}
    password: ${DATABASE_PASSWORD}

  sql:
    init:
      continue-on-error: true

server:
  port: 8080
  servlet:
    context-path: /
  forward-headers-strategy: native
  tomcat:
    remoteip:
      remote-ip-header: x-forwarded-for
      protocol-header: x-forwarded-proto
      internal-proxies: 10\.\d{1,3}\.\d{1,3}\.\d{1,3}|192\.168\.\d{1,3}\.\d{1,3}|169\.254\.\d{1,3}\.\d{1,3}|127\.\d{1,3}\.\d{1,3}\.\d{1,3}|172\.1[6-9]{1}\.\d{1,3}\.\d{1,3}|172\.2[0-9]{1}\.\d{1,3}\.\d{1,3}|172\.3[0-1]{1}\.\d{1,3}\.\d{1,3}|0:0:0:0:0:0:0:1|::1|100\.6[4-9]\.\d{1,3}\.\d{1,3}|100\.[7-9][0-9]{1}\.\d{1,3}\.\d{1,3}|100\.1[0-1][0-9]{1}\.\d{1,3}\.\d{1,3}|100\.12[0-7]\.\d{1,3}\.\d{1,3}
  shutdown: graceful
  error:
    include-message: always

management:
  endpoints:
    web:
      base-path: /
      exposure:
        include: 'info, health, prometheus'
  endpoint:
    health:
      cache:
        time-to-live: 2000ms
      show-components: always
      show-details: always
      probes:
        enabled: true
    info:
      cache:
        time-to-live: 2000ms
    prometheus:
      enabled: true


resettlement-assessment:
  useYaml: true

hmpps.s3:
  buckets:
    document-management:
      bucketName: ${S3_DOCUMENT_BUCKET_NAME}

clamav:
  hostname: localhost
  port: 3310
